
<html>

<head>
<title>火山软件开发平台</title>
<meta http-equiv="expires" content="0">
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
<meta name="keywords" content="递归软件,火山开发平台,火山软件开发平台火山游戏开发平台，安卓开发" />
<meta name="description" content="递归软件,火山开发平台,火山软件开发平台,火山游戏开发平台，安卓开发" />
<link rel="shortcut icon" type="image/x-icon" href="images/voldev.ico" media="screen" />
<link href="../scripts/style.css" rel="stylesheet" type="text/css" />
<script language="JavaScript" type="text/javascript" src="../scripts/jquery-1.10.2.min.js"></script>
<script language="JavaScript" type="text/javascript" src="../scripts/common.js"></script>
</head>
<body>
<div class="xuanfu">
<ul class="menu">
	<ol>
		 <li style="background-color:#E0F0F0;"><h6 class="tree_expand" onClick="StartupPage_ShowItem(this,'new6')" >一.绘制路径类<span>(可收缩)</span></h6></li>
		<ol id="new6">
			<li><blockquote><a href="#hzljl">1.本类说明</a></blockquote></li>  
    		<li><blockquote><a href="#ljtjjx">2.添加矩形</a></blockquote></li>
    		<li><blockquote><a href="#ljtjjx2">3.添加矩形2</a></blockquote></li>
    		<li><blockquote><a href="#tjlj">4.添加路径</a></blockquote></li>
    		<li><blockquote><a href="#tjlj2">5.添加路径2</a></blockquote></li>
    		<li><blockquote><a href="#tjty">6.添加椭圆</a></blockquote></li>
    		<li><blockquote><a href="#tjy">7.添加圆</a></blockquote></li>
    		<li><blockquote><a href="#tjyh">8.添加圆弧</a></blockquote></li>
    		<li><blockquote><a href="#tjyjjx">9.添加圆角矩形</a></blockquote></li>
    		<li><blockquote><a href="#tjyjjx2">10.添加圆角矩形2</a></blockquote></li>
    		<li><blockquote><a href="#sfwjx">11.是否为矩形</a></blockquote></li>
    		<li><blockquote><a href="#ljqk">12.清空</a></blockquote></li>
    		<li><blockquote><a href="#fbdqlk">13.封闭当前轮廓</a></blockquote></li>
    		<li><blockquote><a href="#jsbwjx">14.计算包围矩形</a></blockquote></li>
    		<li><blockquote><a href="#jecqxd">15.加二次曲线到</a></blockquote></li>
    		<li><blockquote><a href="#jscqxd">16.加三次曲线到</a></blockquote></li>
    		<li><blockquote><a href="#xdjecqxd">17.相对加二次曲线到</a></blockquote></li>
    		<li><blockquote><a href="#xdjscqxd">18.相对加三次曲线到</a></blockquote></li>
    		<li><blockquote><a href="#jyhd">19.加圆弧到</a></blockquote></li>
    		<li><blockquote><a href="#jzxd">20.加直线到</a></blockquote></li>
    		<li><blockquote><a href="#xdjzxd">21.相对加直线到</a></blockquote></li>
    		<li><blockquote><a href="#xdzqsd">22.相对置起始点</a></blockquote></li>
    		<li><blockquote><a href="#ydlj">23.移动路径</a></blockquote></li>
    		<li><blockquote><a href="#zqsd">24.置起始点</a></blockquote></li>
    		<li><blockquote><a href="#zjsd">25.置结束点</a></blockquote></li>
    		<li><blockquote><a href="#ljzr">26.置入</a></blockquote></li>
    		<li><blockquote><a href="#zhlj">27.转换路径</a></blockquote></li>
    		<li><blockquote><a href="#zhljd">28.转换路径到</a></blockquote></li>
    		<li><blockquote><a href="#ljfzcj">29.复制创建</a></blockquote></li>
    		<li><blockquote><a href="#ljtcmsx">30.填充模式（写）</a></blockquote></li>
    		<li><blockquote><a href="#tcmsd">31.填充模式（读）</a></blockquote></li>
    		<li><blockquote><a href="#ljsfwkd">32.是否为空（读）</a></blockquote></li>
		</ol>

	</ol>
</ul>
</div>	
<p align="left">
<h2>绘制路径类实例讲解</h2> 
<p><strong>作者：创世魂</strong></p>
<p align="left">&nbsp;</p>
<font style="font-size: 12pt; font-weight:700">● 本类说明</font><br/>
<p align="left">&nbsp;</p>
<blockquote>
  	<p align="left">本类的作用就是进行绘制路径时的各种操作。</p>
	<p align="left">如果不设置路径起始点，默认<b>“起始点坐标（0,0）”</b></p>
	<p align="left"><font color="#F70408">注意：本类位于<strong>“安卓基本类”</strong>模块中，必须添加此模块才能使用。</font></p>
	<p align="left"><img border="0" src="hb_images/350.png" >
</blockquote>	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="ljtjjx"></a>
	<a name="ljtjjx2"></a>
	<font style="font-size: 12pt; font-weight:700">● 添加矩形</font><br/>
	
	<font style="font-size: 12pt; font-weight:700">● 添加矩形2</font><br/>
<p align="left">&nbsp;</p>
	<p align="left"><b>“添加矩形”</b>帮助文档：</p>
<blockquote>
	<p align="left">顾名思义就是在<b>“路径对象”</b>中添加一个矩形。</p>
	<p align="left">通过<b>“小数矩形类”</b>的上下左右进行指定坐标。</p>
	<p align="left"><img border="0" src="hb_images/351.png" ></p>
</blockquote>
	
<p align="left">&nbsp;</p>
	<p align="left"><b>“添加矩形2”</b>帮助文档：</p>
<blockquote>
	<p align="left">本方法与<b>“添加矩形”</b>的区别在于，可以直接指定矩形的<b>“上下左右”</b>坐标参数。</p>
	<p align="left"><img border="0" src="hb_images/352.png" ></p>
</blockquote>	
	
<p align="left">&nbsp;</p>
	<p align="left">代码编写如下图：</p>
<blockquote>
	<p align="left">此处距离<b>“添加矩形”</b>方法。</p>
	<p align="left">定义<b>“画笔类”</b>变量，设置<b>“颜色”</b>，<b>“笔划像素宽度”</b>和<b>“笔划类型”</b>属性。</p>
	<p align="left">随后在<b>“异步绘制帧”</b>事件下，定义一个<b>“绘制路径类”</b>变量和两个<b>“小数矩形类”</b>变量。</p>
	<p align="left">给小数矩形类，分别设置<b>“上下左右”</b>四个属性。</p>
	<p align="left">随后调用本方法，连续添加两个矩形。</p>
	<p align="left">最后调用<b>“画路径”</b>方法，绘制路径。</p>
	<p align="left"><img border="0" src="hb_images/353.png" ></p>
</blockquote>
	
	
<p align="left">&nbsp;</p>
	<p align="left">运行效果如下图：</p>
<blockquote>
	<p align="left">最终的结果，一次性绘制了两个矩形路径。</p>
	<p align="left"><img border="0" src="hb_images/354.png" ></p>
</blockquote>
	
	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="tjlj"></a>
	<a name="tjlj2"></a>
	<font style="font-size: 12pt; font-weight:700">● 添加路径</font><br/>
	<font style="font-size: 12pt; font-weight:700">● 添加路径2</font><br/>
<p align="left">&nbsp;</p>
	<p align="left"><b>“添加路径”</b>帮助文档：</p>
<blockquote>
	<p align="left">通俗理解，就是将已知的<b>“路径对象”</b>，添加到<b>“本路径”</b>对象中。</p>
	<p align="left">可以理解为两个路径合并成一个路径。</p>
	<p align="left">通过<b>“参数3”</b>和<b>“参数4”</b>可以进行<b>“偏移”</b>设置。</p>
	<p align="left"><img border="0" src="hb_images/355.png" ></p>
</blockquote>
	
	<p align="left">&nbsp;</p>
	<p align="left"><b>“添加路径2”</b>帮助文档：</p>
<blockquote>
	<p align="left">本方法与<b>“添加路径2”</b>不同之处在于，本方法没有了<b>“偏移”</b>参数，增加了一个<b>“矩阵类”</b>参数。</p>
	<p align="left">有关矩阵类使用可以跳转到<a href="#juzhenlei"><b>“矩阵类”</b></a>。</p>
	<p align="left"><img border="0" src="hb_images/356.png" ></p>
</blockquote>
	
<p align="left">&nbsp;</p>
	<p align="left">代码编写如下图：</p>
<blockquote>
	<p align="left">此处举例<b>“添加路径”</b>方法。</p>
	<p align="left">我们直接在<b>“添加矩形”</b>方法的基础上，增加一个<b>“添加路径”</b>方法做测试，偏移设置<b>“100”</b>。</p>
	<p align="left"><img border="0" src="hb_images/357.png" ></p>
</blockquote>	
	
<p align="left">&nbsp;</p>
	<p align="left">运行效果如下图：</p>
<blockquote>
	<p align="left">最终结果，两个矩形通过设置的<b>“偏移”</b>坐标，合并到了一起。</p>
	<p align="left">并且另外两个矩形的已然存在。</p>
	<p align="left"><img border="0" src="hb_images/358.png" ></p>
</blockquote>
	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="tjty"></a>
	<a name="tjy"></a>
	<a name="tjyh"></a>
	<a name="tjyjjx"></a>
	<font style="font-size: 12pt; font-weight:700">● 添加椭圆</font><br/>
	<font style="font-size: 12pt; font-weight:700">● 添加圆</font><br/>
	<font style="font-size: 12pt; font-weight:700">● 添加圆弧</font><br/>
	<font style="font-size: 12pt; font-weight:700">● 添加圆角矩形</font><br/>
<p align="left">&nbsp;</p>
<blockquote>
	<p align="left">以上四个方法可以去参考<a href="#hty"><b>“画椭圆”</b></a>，<a href="#hy"><b>“画圆”</b></a>，<a href="#hyh"><b>“画圆弧”</b></a>和<a href="#hyjjxx"><b>“画圆角矩形”</b></a>方法，此处不再讲解。</p>
	<p align="left">不同之处是这四个方法是通过<b>“画路径”</b>进行绘制。</p>
</blockquote>

	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="tjyjjx2"></a>
	<font style="font-size: 12pt; font-weight:700">● 添加圆角矩形2</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">本方法与<b>“添加圆角矩形”</b>不同之处在于，本方法圆角半径是通过<b>“浮点小数数组”</b>提供。</p>
	<p align="left"><b>“浮点小数数组”</b>的创建可参考<a href="#hypd"><b>“画一批点”</b></a>方法，这个方法内使用了浮点小数数组。</p>
	<p align="left">注意<b>“参数3”</b>：至少提供8个数组成员。</p>
	<p align="left"><img border="0" src="hb_images/359.png" ></p>
</blockquote>	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="sfwjx"></a>
	<font style="font-size: 12pt; font-weight:700">● 是否为矩形</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">简单来说就是判断指定<b>“路径对象”</b>是否为矩形，如果<b>“不是矩形”</b>则<b>“参数2”</b>不起任何作用。</p>
	<p align="left">如果目标<b>“路径对象”</b>是矩形，并且<b>“参数2不为空”</b>，此时<b>“参数2”</b>内就会存储<b>“矩形坐标”</b>数据。</p>
	<p align="left">也就是通过<b>“小数矩形类”</b>的<b>“上下左右”</b>四个读方法可以读取矩形的<b>“坐标”</b>。</p>
	<p align="left">在本教程中<b>“小数矩形类”</b>被多次使用，所以这里不再进行演示。</p>
	<p align="left"><img border="0" src="hb_images/360.png" ></p>
</blockquote>

	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="ljqk"></a>
	<font style="font-size: 12pt; font-weight:700">● 清空</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">顾名思义就是清空<b>“路径对象”</b>的内容。</p>
	<p align="left"><b>“参数2”</b>的作用就是红框内所框选的解释，如果进行保留下次可快速使用。</p>
	<p align="left"><img border="0" src="hb_images/361.png" ></p>
</blockquote>	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="fbdqlk"></a>
	<font style="font-size: 12pt; font-weight:700">● 封闭当前轮廓</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">简单来说就是，如果绘制的路径<b>“有缺口”</b>，会自动绘制一条<b>“直线”</b>将<b>“起始点”</b>和<b>“结束点”</b>进行连接。</p>
	<p align="left">保证整个路径时封闭效果。</p>
	<p align="left">本方法的应用可参考<a href="#bhjtzx"><b>“笔划尖头值”</b></a>写属性。</p>
	<p align="left"><img border="0" src="hb_images/362.png" ></p>
</blockquote>

	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="jsbwjx"></a>
	<font style="font-size: 12pt; font-weight:700">● 计算包围矩形</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left"><b>“包围矩形”</b>简单来说就是某个路径形成的图形，正好被一个矩形包围住了，那么这个矩形就是<b>“包围矩形”</b>。</p>
	<p align="left">而本方法的作用就是用来计算路径外围<b>“包围矩形”</b>的四个坐标。 </p>
	<p align="left">坐标会存放到<b>“小数矩形类”</b>参数中。</p>
	<p align="left"><img border="0" src="hb_images/363.png" ></p>
</blockquote>
	
<p align="left">&nbsp;</p>
	<p align="left">代码编写如下图：</p>
<blockquote>
	<p align="left">依然是定义<b>“画笔类”</b>变量，需要设置三个属性。</p>
	<p align="left">随后在<b>“异步绘制帧”</b>事件下，定义两个变量，分别为<b>“绘制路径类”</b>和<b>“小数矩形类”</b>。</p>
	<p align="left">通过<b>“添加圆”</b>方法添加一个圆，随后调用<b>“画路径”</b>方法，将圆绘制出来做参考。</p>
	<p align="left">随后调用<b>“计算包围矩形”</b>方法，参数内填写<b>“小数矩形”</b>变量，存储矩形数据。</p>
	<p align="left">最后可以调用<b>“画板对象.画矩形3()”</b>方法，将包围矩形绘制出来。</p>
	<p align="left"><img border="0" src="hb_images/364.png" ></p>
</blockquote>	
	
<p align="left">&nbsp;</p>
	<p align="left">运行效果如下图：</p>
<blockquote>
	<p align="left">结果就是<b>“圆形路径”</b>外围有一个<b>“矩形”</b>，正好将<b>“圆形包围”</b>起来。</p>
	<p align="left">外围的矩形就是包围矩形。</p>
	<p align="left"><img border="0" src="hb_images/365.png" ></p>
</blockquote>
	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="jecqxd"></a>
	<font style="font-size: 12pt; font-weight:700">● 加二次曲线到</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">顾名思义，就是绘制<b>“二次贝塞尔曲线”</b>。</p>
	<p align="left">参数2、3用来指定控制点坐标。</p>
	<p align="left">参数3、4指定结束点坐标。</p>
	<p align="left">如果不指定起始点坐标，默认为画板左上角，也就是<b>“坐标为（0,0）”</b>。</p>
	<p align="left"><img border="0" src="hb_images/366.png" ></p>
	<p align="left">&nbsp;</p>
	<p align="left">贝塞尔曲线简单说明：</p>
	<p align="left"><b>“参数2、3”</b>的控制点也就是如图所示的<b>“B点”</b>坐标。</p>
	<p align="left">一般情况下<b>“A点”</b>是<b>“起始点”</b>坐标，<b>“C点”</b>是<b>“结束坐标”</b>。</p>
	<p align="left"><img border="0" src="hb_images/366.jpg" ></p>
</blockquote>
	
<p align="left">&nbsp;</p>
	<p align="left">代码编写如下图：</p>
<blockquote>
	<p align="left">定义<b>“画笔类”</b>变量，设置相关属性值。</p>
	<p align="left">随后定义<b>“绘制路径类”</b>变量，通过变量名称调用本方法，填写相关参数创建曲线。</p>
	<p align="left">随后利用<b>“画路径”</b>方法将<b>“曲线”</b>绘制出来。</p>
	<p align="left">最后可以利用<b>“画点”</b>方法将<b>“控制点”</b>绘制出来。</p>
	<p align="left"><img border="0" src="hb_images/367.png" ></p>
</blockquote>	
	
<p align="left">&nbsp;</p>
	<p align="left">运行效果如下图：</p>
<blockquote>
	<p align="left"><img border="0" src="hb_images/368.png" ></p>
</blockquote>
	
	
		<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="jscqxd"></a>
	<font style="font-size: 12pt; font-weight:700">● 加三次曲线到</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">本方法和<b>“加二次”</b>的区别，在于本方法有两个控制点，用来绘制<b>“三阶贝塞尔曲线”</b>。</p>
	<p align="left"><img border="0" src="hb_images/369.png" ></p>
	<p align="left"></p>
	<p align="left">下图为三阶贝塞尔曲线的样式，通过控制<b>“B点”</b>和<b>“C点”</b>的位置可以生成更加复杂的曲线样式。</p>
	<p align="left">大家可以自己调整参数，感受样式的变化。</p>
	<p align="left"></p>
	<p align="left"><img border="0" src="hb_images/369.jpg" ></p>
</blockquote>

	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="xdjecqxd"></a>
	<a name="xdjscqxd"></a>
	<font style="font-size: 12pt; font-weight:700">● 相对加二次曲线到</font><br/>
	<font style="font-size: 12pt; font-weight:700">● 相对加三次曲线到</font><br/>
<p align="left">&nbsp;</p>
<blockquote>
	<p align="left">以上两个方法和前面两个不同之处在于，它们绘制的起始点是<b>“上一个曲线”</b>的结束点。</p>
	
  <p align="left">如果没有上一个曲线，则从<b>“坐标（0,0）”</b>开始绘制。 </p>
	<p align="left">例如下图：</p>
	<p align="left">绘制第二条曲线，它的<b>“起始点坐标”</b>会是<b>“第一条曲线”</b>的<b>“结束点”</b>。</p>
	<p align="left">也就是<b>“坐标（200,200）”</b></p>
	<p align="left">大家可以自由调整参数感受变化，这里不再进行详细介绍。</p>	
	<p align="left"><img border="0" src="hb_images/370.png" ></p>
</blockquote>

	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="jyhd"></a>
	<font style="font-size: 12pt; font-weight:700">● 加圆弧到</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">顾名思义，用来绘制圆弧路径。</p>
	<p align="left">圆弧通过<b>“参数2”</b>的<b>“小数矩形类”</b>限制坐标。</p>
	<p align="left">还需要注意<b>“参数5”</b>，如果连续绘制两个或者多个圆弧，通过本参数可以设置是否将这几个圆弧连接起来。</p>
	<p align="left"><img border="0" src="hb_images/371.png" ></p>
</blockquote>
	
<p align="left">&nbsp;</p>
	<p align="left">代码编写如下图：</p>
<blockquote>
	<p align="left">定义<b>“画笔类”</b>变量，设置<b>“颜色”</b>和<b>“笔划像素宽度”</b>属性。</p>
	<p align="left">随后在<b>“异步绘制帧”</b>事件下，定义一个<b>“绘制路径类”</b>变量和两个<b>“小数矩形类”</b>。</p>
	<p align="left">随后利用本方法连续加两个圆弧，最后调用<b>“画路径”</b>绘制圆弧。</p>
	<p align="left"><img border="0" src="hb_images/372.png" ></p>
</blockquote>	
	
<p align="left">&nbsp;</p>
	<p align="left">运行效果如下图：</p>
<blockquote>
	<p align="left">左图：省略<b>“参数5”</b>或参数5填写为<b>“假”</b>的效果。</p>
	<p align="left">右图：<b>“参数5”</b>填写为<b>“真”</b>的效果。</p>
	<p align="left"><img border="0" src="hb_images/373a.png" >
		<img border="0" src="hb_images/373.png" >
	</p>
</blockquote>
	
	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="jzxd"></a>
	<font style="font-size: 12pt; font-weight:700">● 加直线到</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">顾名思义，给路径添加直线，从<b>“上一条直线”</b>的<b>“结束点”</b>添加。</p>
	<p align="left">如果没有上一条直线，默认从左上角（0,0）坐标开始添加。</p>
	<p align="left">本方法代码编写可参考：<a href="#bhjtzx"><b>“笔划尖头值”</b></a>，此处不再详细讲解。</p>
	<p align="left"><img border="0" src="hb_images/374.png" ></p>
</blockquote>

	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="xdjzxd"></a>
	<font style="font-size: 12pt; font-weight:700">● 相对加直线到</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">本方法和<b>“加直线到”</b>的不同之处在于。</p>
	<p align="left">本方法的<b>“参数坐标”</b>是针对当前路径的<b>“上一条直线”</b>结束点的偏移量。</p>
	<p align="left">大家可以自己使用本方法感受效果，此处不再演示。</p>
	<p align="left"><img border="0" src="hb_images/375.png" ></p>
</blockquote>

		
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="ydlj"></a>
	<font style="font-size: 12pt; font-weight:700">● 移动路径</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">顾名思义，就是根绝设置的<b>“偏移参数”</b>移动指定路径到指定位置。</p>
	<p align="left">如果<b>“参数4”</b>为空，则移动后的路径赋值给本对象，如果不为空则赋值给<b>“参数4”</b></p>
	<p align="left"><img border="0" src="hb_images/376.png" ></p>
</blockquote>
	
<p align="left">&nbsp;</p>
	<p align="left">代码编写如下图：</p>
<blockquote>
	<p align="left"><b>“参数4”</b>为空对象时，移动后的路径会赋值给<b>“路径1”</b>变量。</p>
	<p align="left"></p>
	<p align="left"><img border="0" src="hb_images/377.png" ></p>
	<p align="left"></p>
	<p align="left"><b>“参数4”</b>填写指定变量后，移动后的路径会赋值给<b>“参数4”</b>变量。</p>
	<p align="left">可以通过<b>“结果路径”</b>变量绘制移动后的路径。</p>
	<p align="left"></p>
	<p align="left"><img border="0" src="hb_images/378.png" ></p>
</blockquote>	

		<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="zqsd"></a>
	<font style="font-size: 12pt; font-weight:700">● 置起始点</font><br/>
<p align="left">&nbsp;</p>
<blockquote>
	<p align="left">顾名思义，就是用来设置<b>“绘制路径”</b>时的<b>“起始点坐标”</b>位置。</p>
	<p align="left">本方法代码编写可参考：<a href="#bhjtzx"><b>“笔划尖头值”</b></a>，此处不再详细讲解。</p>
	<p align="left"><img border="0" src="hb_images/379.png" ></p>
</blockquote>

	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="xdzqsd"></a>
	<font style="font-size: 12pt; font-weight:700">● 相对置起始点</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">本方法同样是设置起始点坐标，不同之处在于。</p>
	<p align="left">它是根据上一个路径的结束点坐标的偏移量，来设置新的起始点。</p>
	<p align="left">本方法大家自行测试，这里不再演示。</p>
	<p align="left"><img border="0" src="hb_images/380.png" ></p>
</blockquote>
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="zjsd"></a>
	<font style="font-size: 12pt; font-weight:700">● 置结束点</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">顾名思义，设置结束点坐标值。</p>
	<p align="left">本方法共有<b>“三个”</b>参数，后两个<b>“小数”</b>参数提供<b>“结束点”</b>的坐标值。</p>
	<p align="left">可以理解为重置<b>“路径最后一个点”</b>所处的位置。</p>
	<p align="left"><img border="0" src="hb_images/381.png" ></p>
</blockquote>
	
<p align="left">&nbsp;</p>
	<p align="left">代码编写如下图：</p>
<blockquote>
	<p align="left">比如，代码中通过<b>“路径1”</b>添加两条直线，随后设置一个结束点。</p>
	<p align="left">最后绘制整条路径。</p>
	<p align="left"><img border="0" src="hb_images/382.png" ></p>
</blockquote>	
	
<p align="left">&nbsp;</p>
	<p align="left">运行效果如下图：</p>
<blockquote>
	<p align="left">最终的结果就是，<b>“第二条直线”</b>设置的坐标不起作用，直接使用了<b>“置结束点”</b>的坐标。</p>
	<p align="left"><img border="0" src="hb_images/383.png" ></p>
</blockquote>
	
	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="ljzr"></a>
	<font style="font-size: 12pt; font-weight:700">● 置入</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">可以理解为把<b>“参数2”</b>中的对象赋值给<b>“当前对象”</b>。</p>
	<p align="left"><img border="0" src="hb_images/384.png" ></p>
</blockquote>
	
<p align="left">&nbsp;</p>
	<p align="left">代码编写如下图：</p>
<blockquote>
	<p align="left">如果还不理解，看图内<b>“路径2”</b>就等于当前对象。</p>
	<p align="left"><b>“路径1”</b>就是参数。</p>
	<p align="left">本方法的作用就是将<b>“路径1”</b>的所有路径信息，赋值给<b>“路径2”</b>也就是当前对象。</p>
	<p align="left"><img border="0" src="hb_images/385.png" ></p>
</blockquote>	

	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="zhlj"></a>
	<font style="font-size: 12pt; font-weight:700">● 转换路径</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">简单来说，就是通过创建的<b>“矩阵类”</b>对象，针对绘制的路径进行一些转换操作。</p>
	<p align="left">例如：<b>“旋转”</b>路径，<b>“平移”</b>路径等……</p>
	<p align="left"><img border="0" src="hb_images/386.png" ></p>
</blockquote>
	
<p align="left">&nbsp;</p>
	<p align="left">代码编写如下图：</p>
<blockquote>
	<p align="left">依然是定义<b>“画笔类”</b>变量，设置相关属性。</p>
	<p align="left">随后在<b>“异步绘制帧”</b>事件下定义两个变量，分别为<b>“绘制路径类”</b>和<b>“矩阵类”</b>。</p>
	<p align="left">通过<b>“加直线到”</b>方法，添加两条直线形成一个路径。</p>
	<p align="left">随后调用<b>“画路径”</b>方法绘制平移前的路径。</p>
	<p align="left">通过<b>“矩阵”</b>变量，调用<b>“乘于平移矩阵”</b>方法，创建一个平移的矩阵。</p>
	<p align="left">随后调用<b>“路径1.转换路径”</b>方法，参数填写<b>“矩阵”</b>变量。</p>
	<p align="left">这样操作之后，绘制的路径就会进行平移操作。</p>
		
<p align="left">最后将平移后的路径绘制出来即可。</p>
	<p align="left"><img border="0" src="hb_images/387.png" ></p>
</blockquote>	
	
<p align="left">&nbsp;</p>
	<p align="left">运行效果如下图：</p>
<blockquote>
	<p align="left"><img border="0" src="hb_images/388.png" ></p>
</blockquote>
	
	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="zhljd"></a>
	<font style="font-size: 12pt; font-weight:700">● 转换路径到</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">本方法和<a href="#ydlj"><b>“移动路径”</b></a>有些类似。</p>
	<p align="left">如果<b>“参数3”</b>不为空，则将转换后的结果赋值给<b>“参数3”</b>的变量。</p>
	<p align="left">如果<b>“参数3”</b>为空，则赋值给当前对象。</p>
	<p align="left">具体使用方法可参考<b>“转换路径”</b>方法。</p>
	<p align="left"><img border="0" src="hb_images/389.png" ></p>
</blockquote>
	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="ljfzcj"></a>
	<font style="font-size: 12pt; font-weight:700">● 复制创建</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">顾名思义，就是将<b>“当前路径”</b>对象进行复制一份，并返回创建一个新的对象。</p>
	<p align="left"><b>“新的路径对象”</b>会拥有<b>“当前路径对象”</b>的所有路径信息。</p>
	<p align="left">通过返回的路径对象，可直接进行绘制操作，本方法不再演示。</p>
	<p align="left"><img border="0" src="hb_images/390.png" ></p>
</blockquote>
	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="ljtcmsx"></a>
	<font style="font-size: 12pt; font-weight:700">● 填充模式（写）</font><br/>
<p align="left">&nbsp;</p>
	<p align="left">帮助文档如下图：</p>
<blockquote>
	<p align="left">顾名思义，设置路径的<b>“填充”</b>模式。</p>
	<p align="left">通过<b>“绘制路径填充方式”</b>类进行指定，它共有四个常量值。</p>
	<p align="left">分别为：卷绕型，反色卷绕型，奇偶型和反色奇偶型。</p>
	<p align="left"><img border="0" src="hb_images/391.png" ></p>
</blockquote>
	
<p align="left">&nbsp;</p>
	<p align="left">代码编写如下图：</p>
<blockquote>
	<p align="left">例如：给路径添加两个圆，设置对应坐标。</p>
	<p align="left">设置<b>“填充模式”</b>属性为<b>“绘制路径填充方式.卷绕型”</b>。</p>
	<p align="left"><img border="0" src="hb_images/392.png" ></p>
</blockquote>	
	
<p align="left">&nbsp;</p>
	<p align="left">运行效果如下图：</p>
<blockquote>
	<p align="left">下面举例了两个样式，其它样式大家自行测试。</p>
	<p align="left">左图：卷绕型，路径内部填充。</p>
	<p align="left">右图：反色卷绕型，路径外部填充。</p>
	<p align="left"><img border="0" src="hb_images/393.png" >
	<img border="0" src="hb_images/394.png" ></p>
</blockquote>
	
	
	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="tcmsd"></a>
	<font style="font-size: 12pt; font-weight:700">● 填充模式（读）</font><br/>
<p align="left">&nbsp;</p>
<blockquote>
	<p align="left">顾名思义，本属性的作用就是用来读取当前的填充模式。</p>
	<p align="left">在需要用到<b>“填充模式”</b>的地方直接输入<b>“路径变量.填充模式”</b>即可。</p>
</blockquote>

	<p align="left">&nbsp;</p>	
	<p align="left">&nbsp;</p>
<a name="ljsfwkd"></a>
	<font style="font-size: 12pt; font-weight:700">● 是否为空（读）</font><br/>
<p align="left">&nbsp;</p>
<blockquote>
	<p align="left">本<b>“读属性”</b>的作用就是用来<b>“判断当前路径”</b>对象是否有路径内容。</p>
	<p align="left">返回值为<b>“逻辑型”</b>。</p>
	<p align="left">返回<b>“真”</b>表示没有任何数据，返回<b>“假”</b>表示存在路径数据。</p>
</blockquote>
	
	
	
<p align="left">&nbsp;</p>
	<p align="left">&nbsp;</p>
<p align="left">&nbsp;</p>
</body>
</html>
